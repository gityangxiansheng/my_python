#定义常量咖啡机内部的容量
咖啡机容量 = [
    { "牛奶" : "200"},
    {"水":"300"},
    {"Coffee": "100"}
    ]

咖啡机材料剩余情况 ={
    "牛奶" : 200,
    "水":300,
    "Coffee": 100}
    

#定义商品品类
# 拿铁咖啡={"价格":2.50,"牛奶":150,"水":200,"Coffee":24}
# 卡布奇诺={"价格":3.00,"牛奶":100,"水":250,"Coffee":24}
# 黑咖啡={"价格":1.50,"牛奶":0,"水":50,"Coffee":18}

商品品类 =  [
    {
        "拿铁咖啡": {
            "价格": 2.50,
            "牛奶": 150,
            "水": 200,
            "Coffee": 24
        }
    },
    {
        "卡布奇诺": {
            "价格": 3.00,
            "牛奶": 100,
            "水": 250,
            "Coffee": 24
        }
    },
    {
        "黑咖啡": {
            "价格": 1.50,
            "牛奶": 0,
            "水": 50,
            "Coffee": 18
        }
    }
]

#定义硬币面值

硬币面值 = [{"2角":0.2},{"5角":0.5},{"1角":0.1},{"1元":1.0}]


#输r程序
def 输入():
    用户选择=input(f"你需要点什么(拿铁咖啡/卡布奇诺/黑咖啡/物料报告)\n")
    return 用户选择


def 硬币结算(咖啡价格):
    一角=int(input("多少个1角?"))
    二角=int(input("多少个2角?"))
    五角=int(input("多少个5角?"))
    一元=int(input("多少个1元?"))
    投入金币=round((一角*0.1+二角*0.2+五角*0.5+一元*1.0), 1)
    if 投入金币 > 咖啡价格:
        返回找零=f"您支付了{投入金币}元，找零{投入金币-咖啡价格}元"
        
    elif 投入金币 == 咖啡价格:
        返回找零="您支付的金币正好！欢迎下次光临！"
        
    else:
        返回找零=f"您支付了{投入金币}元，但是您选购的商品需要{咖啡价格}元。"
        
    return 返回找零


def 查看物料是否充足(咖啡机材料剩余情况,商品品类): 
    #首先获取咖啡机材料剩余情况  
    #商品品类
    商品品类=商品品类
    
    if 商品品类 == "物料报告":
        物料状态 =""
        return 物料状态
    elif 咖啡机材料剩余情况["水"]>商品品类["水"] and 咖啡机材料剩余情况["牛奶"]>商品品类["牛奶"] and 咖啡机材料剩余情况["Coffee"]>商品品类["Coffee"]:
        #需要一个硬币结算程序
        返回找零=硬币结算(商品品类["价格"])
        物料状态={
        "牛奶":咖啡机材料剩余情况["牛奶"]-商品品类["牛奶"],
        "水":咖啡机材料剩余情况["水"]-商品品类["水"],
        "Coffee":咖啡机材料剩余情况["Coffee"]-商品品类["Coffee"]
        }
        print(返回找零)
        
        
    else :
        
        if (咖啡机材料剩余情况["水"]<商品品类["水"] and 咖啡机材料剩余情况["牛奶"] < 商品品类["牛奶"]) or (咖啡机材料剩余情况["Coffee"]<商品品类["Coffee"] and 咖啡机材料剩余情况["水"] < 商品品类["水"]) or (咖啡机材料剩余情况["Coffee"]<商品品类["Coffee"] and 咖啡机材料剩余情况["牛奶"] < 商品品类["牛奶"]):
            物料状态="请检查物料状态！"
        elif  咖啡机材料剩余情况["水"]<商品品类["水"] :
            物料状态="水剩余的不足了！"
        elif 咖啡机材料剩余情况["牛奶"] < 商品品类["牛奶"] :
            物料状态="牛奶剩余的不足了！"
        elif 咖啡机材料剩余情况["Coffee"]<商品品类["Coffee"] :
            物料状态="咖啡剩余的不足了！"
        else:
            物料状态="请检查物料状态！"
    return 物料状态


def 金币数量1(用户输入):
    金币数量 = 0
    if 用户输入 == "物料报告":
        金币数量+=0
    elif 用户输入 == "黑咖啡":
        金币数量+=1.5
    elif 用户输入 == "拿铁咖啡":
        金币数量+=2.5
    elif 用户输入 == "卡布奇诺":
        金币数量+=3.0
    return 金币数量

def 交互(用户选择,咖啡机材料剩余情况,商品品类,金币数量):


    
    已选择的商品种类=""
    if 用户选择 == "物料报告":
        print(f"""
当前剩余物料:\n
水剩余{咖啡机材料剩余情况["水"]}ml\n
牛奶剩余{咖啡机材料剩余情况["牛奶"]}ml\n
咖啡剩余{咖啡机材料剩余情况["Coffee"]}g\n
金币{金币数量}元
        """)
        已选择的商品种类="物料报告"
    #如果用户选择了拿铁咖啡    
    else:
        for 商品品类s in 商品品类: 
            if 用户选择 in 商品品类s:
                商品品类 = 商品品类s
                已选择的商品种类=商品品类[用户选择]
    
    return 已选择的商品种类

# def 物料(咖啡机材料剩余情况，商品品类):
#     咖啡机材料剩余情况   

        





def 主程序(商品品类,咖啡机材料剩余情况):
    金币数量=0.0
    while True:
        #获取用户输入的内容打印第一条
        用户输入=输入()
        #如果用户选择物料报告就打印，否则返回商品的字典
        已选择的商品种类=交互(用户输入,咖啡机材料剩余情况,商品品类,金币数量)
        #如果本次返回了商品的字典,说明了选择购买了某样商品
        if not 已选择的商品种类  is None: 
            #检查物料是否充足并打印硬币选项,如果物料不充足则返回物料情况如果物料充足
            物料状态=查看物料是否充足(咖啡机材料剩余情况,已选择的商品种类)
            
            print(物料状态)
            print(咖啡机材料剩余情况)
            # 咖啡机材料剩余情况=物料状态
            if isinstance(物料状态, dict):
                金币数量s = 金币数量1(用户输入)
                金币数量 += 金币数量s
                咖啡机材料剩余情况=物料状态
            print(金币数量)
            print(物料状态)
            print(咖啡机材料剩余情况)

主程序(商品品类,咖啡机材料剩余情况)


